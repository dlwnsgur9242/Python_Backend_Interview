# Django의 ORM 기능 설명

=> ORM(Object Relational Mapping, 객체 관계 매핑)은 
객체와 관계형 DB를 연결해주는 개념을 의미함. 쉽게 설명하자면, 
생성한 클래스(객체)를 SQL문으로 자동 변환하여 데이터를 다루는 것. 
이 기능 덕분에 SQL문을 사용하지 않고도 DB데이터를 관리할 수 있음. 
직접 SQL 쿼리를 작성하지 않아도 파이썬 코드로 DB를 조작 가능함을 의미하며 
이는 개발자가 애플리케이션의 로직 작성에 집중할 수 있도록 도움을 줌.




장고(Django)는 파이썬으로 작성된 웹 프레임워크로, 웹 애플리케이션을 빠르게 개발하고 유지보수할 수 있도록 도와주는 도구입니다. 장고는 MTV 패턴(Model-Template-View)을 기반으로 하고 있으며, 이 패턴을 통해 애플리케이션의 구조를 깔끔하게 분리하고 효율적으로 관리할 수 있도록 합니다. 주요 개념을 아래에 설명하겠습니다.

1. MTV 패턴
    Model: 데이터베이스와 상호작용하는 부분으로, 데이터 구조를 정의하는 역할을 합니다. 장고에서는 ORM(Object-Relational Mapping)을 통해 SQL을 직접 작성하지 않고도 데이터베이스와 통신할 수 있습니다.
    Template: 사용자에게 보여지는 화면을 정의하는 부분으로, HTML과 템플릿 언어를 통해 웹 페이지의 UI를 만듭니다.
    View: 요청을 처리하고 필요한 데이터를 불러와 템플릿으로 전달하는 역할을 합니다. 사용자의 요청을 받아 Model에서 데이터를 가져와 처리한 후 Template에 전달해 렌더링합니다.
2. 장고의 주요 기능
    URL 관리: urls.py 파일을 통해 각 페이지의 URL을 설정할 수 있어 웹 애플리케이션의 구조를 직관적으로 관리할 수 있습니다.
    ORM(Object-Relational Mapping): 장고에서는 SQL을 직접 작성하지 않고 파이썬 클래스와 메서드를 사용하여 데이터베이스 작업을 수행할 수 있습니다.
    Forms: 사용자가 입력한 데이터를 쉽게 처리할 수 있도록 도와주는 기능입니다. HTML 폼을 쉽게 작성하고, 유효성 검사를 포함하여 데이터를 손쉽게 처리할 수 있습니다.
    관리자(Admin): 장고의 강력한 관리 도구로, 기본적인 CRUD 작업을 수행할 수 있는 인터페이스를 자동으로 생성해줍니다. 모델을 정의하고 관리자에 등록하기만 하면 관리 페이지에서 데이터를 손쉽게 관리할 수 있습니다.
3. 장고의 작동 원리
    URL 요청: 사용자가 URL에 요청을 보냄
    View 처리: 해당 URL에 매핑된 View 함수가 호출되어 데이터를 가져옴
    Template 렌더링: View에서 가져온 데이터를 Template에 전달해 웹 페이지를 생성
    응답 반환: 최종적으로 HTML 페이지를 사용자에게 반환
4. 장고의 설정 파일
    장고 프로젝트의 settings.py 파일에는 데이터베이스 연결, 앱 설정, 정적 파일 설정 등 프로젝트 전반에 필요한 설정이 포함되어 있습니다.